#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -eo pipefail

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=${3:-}

function error() {
    echo " !     $*" >&2
    exit 1
}

function topic() {
    echo "-----> $*"
}

function indent() {
    c='s/^/       /'
    case $(uname) in
        Darwin) sed -l "$c";;
        *)      sed -u "$c";;
    esac
}

export_env_dir() {
    env_dir=$1
    acceptlist_regex=${2:-''}
    denylist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
    if [ -d "$env_dir" ]; then
        for e in $(ls $env_dir); do
            echo "$e" | grep -E "$acceptlist_regex" | grep -qvE "$denylist_regex" &&
            export "$e=$(cat $env_dir/$e)"
            :
        done
    fi
}

export_env_dir "$ENV_DIR" '^DD_'

topic "Preparing to install Datadog PHP extensions"

if [[ -n ${DD_INSTALLER_URL:-} ]]; then
    echo "Using package URL '$DD_INSTALLER_URL' (from "'$DD_INSTALLER_URL env var).' | indent
else
    if [[ -n ${DD_RELEASE:-} ]]; then
        echo "Using dd-trace-php release '$DD_RELEASE' (from "'$DD_RELEASE env var).' | indent
    else
        export DD_RELEASE="0.87.2"
        echo "Using dd-trace-php release '$DD_RELEASE' (default value)." | indent
    fi
    export DD_INSTALLER_URL="https://github.com/DataDog/dd-trace-php/releases/download/"$DD_RELEASE"/datadog-setup.php"
fi

if [[ "$DD_INSTALLER_URL" != *datadog-setup.php ]]
then
    error "The package URL is out of date. Please use the 'datadog-setup.php' file URL from the releases at https://github.com/DataDog/dd-trace-php/releases"
fi

topic "Downloading installer from $DD_INSTALLER_URL"
curl --silent --show-error --fail --location --output datadog-setup.php $DD_INSTALLER_URL 2>&1 | indent

topic "Running Datadog installer"

OPTS=""

if [[ -n ${DD_PROFILING_ENABLED:-} ]];
then
    OPTS+=" --enable-profiling"
    echo "Profiling will be enabled" | indent
fi

if [[ -n ${DD_APPSEC_ENABLED:-} ]];
then
    OPTS+=" --enable-appsec"
    echo "Appsec will be enabled" | indent
fi

mkdir -p $BUILD_DIR/opt

env -u PHP_INI_SCAN_DIR php datadog-setup.php --php-bin=all --install-dir=$BUILD_DIR/opt $OPTS 2>&1 | indent

topic "Validating installation"

env -u PHP_INI_SCAN_DIR php -v 2>&1 | indent

echo "Done" | indent
